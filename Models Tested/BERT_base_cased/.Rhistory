BERT_bcCareers$Multi <- "No"
BERT_bcCareern$Multi <- "No"
BERT_bmcCareers$Multi <- "Yes"
BERT_bmcCareern$Multi <- "Yes"
BERT_bmuCareers$Multi <- "Yes"
BERT_bmuCareern$Multi <- "Yes"
distilbert_bcCareers$Multi <- "No"
distilbert_bcCareern$Multi <- "No"
distilbert_bmcCareers$Multi <- "Yes"
distilbert_bmcCareern$Multi <- "Yes"
ERNIE_Careers$Multi <- "Yes"
ERNIE_Careern$Multi <- "Yes"
RoBERTa_bCareers$Multi <- "No"
RoBERTa_bCareern$Multi <- "No"
STSB_Careers$Multi <- "Yes"
STSB_Careern$Multi <- "Yes"
XLM_rCareers$Multi <- "Yes"
XLM_rCareern$Multi <- "Yes"
df_list <- list(BERT_bcCareers, BERT_bcCareern, BERT_bmcCareers,
BERT_bmcCareern, BERT_bmuCareers, BERT_bmuCareern,
distilbert_bcCareers, distilbert_bcCareern,
distilbert_bmcCareers, distilbert_bmcCareern,
ERNIE_Careers, ERNIE_Careern, RoBERTa_bCareers,
RoBERTa_bCareern, STSB_Careers, STSB_Careern,
XLM_rCareers, XLM_rCareern)
################
# MaleVsFemale #
################
# Create a new dataframe to store the selected values
factorFS <- data.frame(estimate = numeric(0), std.error = numeric(0), p.value = numeric(0), Df = character(0), Multi = character(0))
for (df in df_list) {
# Extract values based on the condition and bind to the new dataframe
selected_values <- filter(df, term == "GenderF") %>%
select(estimate, std.error, p.value, Df, Multi)
# Bind the resulting rows to the new dataframe
factorFS <- bind_rows(factorFS, selected_values)
}
# Print the resulting dataframe
print("Resulting DataFrame:")
print(factorFS)
STEM <- factorFS %>%
filter(grepl("s$", Df))
NonSTEM <- factorFS %>%
filter(grepl("n$", Df))
############################
# Graphing for Racial Bias #
############################
Pleasant <- rbind(LatinxPleasant, ChinesePleasant, BlackPleasant)
Unpleasant <- rbind(LatinxUnpleasant, ChineseUnpleasant, BlackUnpleasant)
p1 <- ggplot(data = Pleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
facet_grid(.~Race) +
labs(title = "Difference in Coefficients For White Names and Other Races for Pleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p1
ggsave("Race_Coefficients_for_Pleasant_Words_Plot.png", p1)
p2 <- ggplot(data = Unpleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
facet_grid(.~Race) +
labs(title = "Difference in Coefficients For White Names and Other Races for Unpleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2
ggsave("Race_Coefficients_for_Unpleasant_Words_Plot.png", p2)
############################
# Graphing for Gender Bias #
############################
p3 <- ggplot(data = FemalePleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
labs(title = "Difference in Coefficients For Males and Females for Pleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p3
ggsave("Gender_Coefficients_for_Pleasant_Words_Plot.png", p3)
p4 <- ggplot(data = FemaleUnpleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
labs(title = "Difference in Coefficients For Males and Females for Unpleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p4
ggsave("Gender_Coefficients_for_Unpleasant_Words_Plot.png", p4)
############################
# Graphing for Career Bias #
############################
p5 <- ggplot(data = STEM, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
labs(title = "Difference in Coefficients For Males and Females for STEM Careers", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p5
ggsave("Gender_Coefficients_for_STEM_Careers_Plot.png", p5)
p6 <- ggplot(data = NonSTEM, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
geom_text(aes(label = paste("p-value:", sprintf("%.4f", p.value))),
position = position_dodge(width = 0.2), vjust = 2, size = 3, angle = 45) +
labs(title = "Difference in Coefficients For Males and Females for Non-STEM Careers", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p6
ggsave("Gender_Coefficients_for_NonSTEM_Careers_Plot.png", p6)
############################
# Graphing for Racial Bias #
############################
Pleasant <- rbind(LatinxPleasant, ChinesePleasant, BlackPleasant)
Unpleasant <- rbind(LatinxUnpleasant, ChineseUnpleasant, BlackUnpleasant)
p1 <- ggplot(data = Pleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
geom_text(aes(label = paste("p-value:", sprintf("%.4f", p.value))),
position = position_dodge(width = 0.2), vjust = 2, size = 3, angle = 45) +
facet_grid(.~Race) +
labs(title = "Difference in Coefficients For White Names and Other Races for Pleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p1
ggsave("Race_Coefficients_for_Pleasant_Words_Plot.png", p1)
p2 <- ggplot(data = Unpleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
geom_text(aes(label = paste("p-value:", sprintf("%.4f", p.value))),
position = position_dodge(width = 0.2), vjust = 2, size = 3, angle = 45) +
facet_grid(.~Race) +
labs(title = "Difference in Coefficients For White Names and Other Races for Unpleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2
ggsave("Race_Coefficients_for_Unpleasant_Words_Plot.png", p2)
############################
# Graphing for Gender Bias #
############################
p3 <- ggplot(data = FemalePleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
geom_text(aes(label = paste("p-value:", sprintf("%.4f", p.value))),
position = position_dodge(width = 0.2), vjust = 2, size = 3, angle = 45) +
labs(title = "Difference in Coefficients For Males and Females for Pleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p3
ggsave("Gender_Coefficients_for_Pleasant_Words_Plot.png", p3)
p4 <- ggplot(data = FemaleUnpleasant, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
geom_text(aes(label = paste("p-value:", sprintf("%.4f", p.value))),
position = position_dodge(width = 0.2), vjust = 2, size = 3, angle = 45) +
labs(title = "Difference in Coefficients For Males and Females for Unpleasant Words", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p4
ggsave("Gender_Coefficients_for_Unpleasant_Words_Plot.png", p4)
############################
# Graphing for Career Bias #
############################
p5 <- ggplot(data = STEM, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
geom_text(aes(label = paste("p-value:", sprintf("%.4f", p.value))),
position = position_dodge(width = 0.2), vjust = 2, size = 3, angle = 45) +
labs(title = "Difference in Coefficients For Males and Females for STEM Careers", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p5
ggsave("Gender_Coefficients_for_STEM_Careers_Plot.png", p5)
p6 <- ggplot(data = NonSTEM, aes(Df, estimate, color = Multi)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error), width = 0.2, color = "black") +
geom_text(aes(label = paste("p-value:", sprintf("%.4f", p.value))),
position = position_dodge(width = 0.2), vjust = 2, size = 3, angle = 45) +
labs(title = "Difference in Coefficients For Males and Females for Non-STEM Careers", x = "Model", y = "Change in Coefficient") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ylim(-0.1, 0.2) +
scale_y_continuous(breaks = seq(-0.1, 0.2, 0.05))
p6
ggsave("Gender_Coefficients_for_NonSTEM_Careers_Plot.png", p6)
setwd("C:/Users/Ryan Ackerman/Desktop/Spring 2023/SoDA 496/SoDA496Project/CapStone/BERT_base_cased")
rm(list = ls())
library(tidyverse)
library(MASS)
library(broom)
Race <- read.csv("BERT_base_cased_Race.csv")
Gender <- read.csv("BERT_base_cased_Gender.csv")
Career <- read.csv("BERT_base_cased_Career.csv")
Race$Race <- factor(Race$Race, levels = c("White", "Chinese", "Latinx", "Black"))
refRace <- "White"
Race$Race <- relevel(factor(Race$Race), ref = refRace)
Race_P <- Race %>%
filter(Good_or_Bad == "Good")
Race_U <- Race %>%
filter(Good_or_Bad == "Bad")
#########################
# Min-Max Normalization #
#########################
# Example datasets
cosine_similarities_1 <- Race_P$CosineSimilarity
cosine_similarities_2 <- Race_U$CosineSimilarity
cosine_similarities_3 <- Gender$CosineSimilarity
cosine_similarities_4 <- Career$CosineSimilarity
# Combine the datasets into a matrix
cosine_matrix <- cbind(cosine_similarities_1, cosine_similarities_2, cosine_similarities_3, cosine_similarities_4)
# Find the overall minimum and maximum values
min_value <- min(cosine_matrix)
max_value <- max(cosine_matrix)
# Apply min-max normalization
min_max_normalized <- (cosine_matrix - min_value) / (max_value - min_value)
# Replace the original datasets with normalized values
Race_P$CosineSimilarity <- min_max_normalized[, 1]
Race_U$CosineSimilarity <- min_max_normalized[, 2]
Gender$CosineSimilarity <- min_max_normalized[, 3]
Career$CosineSimilarity <- min_max_normalized[, 4]
#Sample for Presentation
write.csv(Gender, "Gender_Normalized.csv")
# Reference Factors and Splitting other data sets for analysis
refGender <- "M"
Gender$Gender <- relevel(factor(Gender$Gender), ref = refGender)
Career$Gender <- relevel(factor(Career$Gender), ref = refGender)
Gender_P <- Gender %>%
filter(Good_or_Bad == "Good")
Gender_U <- Gender %>%
filter(Good_or_Bad == "Bad")
Career_S <- Career %>%
filter(STEM == "Yes")
Career_N <- Career %>%
filter(STEM == "No")
########################
# Analysis of Variance #
########################
#Race
RacePANOVA <- aov(CosineSimilarity ~ Race, data = Race_P)
tukey_PR <- TukeyHSD(RacePANOVA)
RacePANOVA
tukey_PR
RaceUANOVA <- aov(CosineSimilarity ~ Race, data = Race_U)
tukey_UR <- TukeyHSD(RaceUANOVA)
RaceUANOVA
tukey_UR
#Gender
GenderPANOVA <- aov(CosineSimilarity ~ Gender, data = Gender_P)
tukey_PG <- TukeyHSD(GenderPANOVA)
GenderPANOVA
tukey_PG
GenderUANOVA <- aov(CosineSimilarity ~ Gender, data = Gender_U)
tukey_UG <- TukeyHSD(GenderUANOVA)
GenderUANOVA
tukey_UG
#Career
CareerSANOVA <- aov(CosineSimilarity ~ Gender, data = Career_S)
tukey_SC <- TukeyHSD(CareerSANOVA)
CareerSANOVA
tukey_SC
CareerNANOVA <- aov(CosineSimilarity ~ Gender, data = Career_N)
tukey_NC <- TukeyHSD(CareerNANOVA)
CareerNANOVA
tukey_NC
##########
# T-Test #
##########
#Race
#Pleasant Words
WhiteP <- Race_P %>%
filter(Race == "White")
OtherP <- Race_P %>%
filter(Race != "White")
t_raceP <- t.test(WhiteP$CosineSimilarity, OtherP$CosineSimilarity)
t_raceP
#Individual races compared to White with Pleasant Words
list = list('Black','Latinx','Chinese')
for (i in list){
t_test_P_result <- t.test(WhiteP$CosineSimilarity, subset(OtherP, Race == i)$CosineSimilarity)
print(t_test_P_result)
}
#Unpleasant Words
WhiteU <- Race_U %>%
filter(Race == "White")
OtherU <- Race_U %>%
filter(Race != "White")
t_raceU <- t.test(WhiteU$CosineSimilarity, OtherU$CosineSimilarity)
t_raceU
#Individual races compared to White with Pleasant Words
list = list('Black','Latinx','Chinese')
for (i in list){
t_test_U_result <- t.test(WhiteU$CosineSimilarity, subset(OtherU, Race == i)$CosineSimilarity)
print(t_test_U_result)
}
#Gender
MaleP <- Gender_P %>%
filter(Gender == "M")
FemaleP <- Gender_P %>%
filter(Gender == "F")
t_genderP <- t.test(MaleP$CosineSimilarity, FemaleP$CosineSimilarity)
t_genderP
MaleU <- Gender_U %>%
filter(Gender == "M")
FemaleU <- Gender_U %>%
filter(Gender == "F")
t_genderU <- t.test(MaleU$CosineSimilarity, FemaleU$CosineSimilarity)
t_genderU
#Career
MaleS <- Career_S %>%
filter(Gender == "M")
FemaleS <- Career_S %>%
filter(Gender == "F")
t_careerS <- t.test(MaleS$CosineSimilarity, FemaleS$CosineSimilarity)
t_careerS
MaleN <- Career_N %>%
filter(Gender == "M")
FemaleN <- Career_N %>%
filter(Gender == "F")
t_careerN <- t.test(MaleN$CosineSimilarity, FemaleN$CosineSimilarity)
t_careerN
##############
# Regression #
##############
#Race
RacePCoeff <- lm(CosineSimilarity ~ Race, data = Race_P)
summary(RacePCoeff)
tidy_output <- tidy(RacePCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_RaceP.csv", row.names = FALSE)
RaceUCoeff <- lm(CosineSimilarity ~ Race, data = Race_U)
summary(RaceUCoeff)
tidy_output <- tidy(RaceUCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_RaceU.csv", row.names = FALSE)
#Gender
GenderPCoeff <- lm(CosineSimilarity ~ Gender, data = Gender_P)
summary(GenderPCoeff)
tidy_output <- tidy(GenderPCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_GenderP.csv", row.names = FALSE)
GenderUCoeff <- lm(CosineSimilarity ~ Gender, data = Gender_U)
summary(GenderUCoeff)
tidy_output <- tidy(GenderUCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_GenderU.csv", row.names = FALSE)
#Career
CareerSCoeff <- lm(CosineSimilarity ~ Gender, data = Career_S)
summary(CareerSCoeff)
tidy_output <- tidy(CareerSCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_CareerS.csv", row.names = FALSE)
CareerNCoeff <- lm(CosineSimilarity ~ Gender, data = Career_N)
summary(CareerNCoeff)
tidy_output <- tidy(CareerNCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_CareerN.csv", row.names = FALSE)
library(tidyverse)
library(MASS)
library(broom)
Race <- read.csv("BERT_base_cased_Race.csv")
Gender <- read.csv("BERT_base_cased_Gender.csv")
Career <- read.csv("BERT_base_cased_Career.csv")
Race$Race <- factor(Race$Race, levels = c("White", "Chinese", "Latinx", "Black"))
refRace <- "White"
Race$Race <- relevel(factor(Race$Race), ref = refRace)
Race_P <- Race %>%
filter(Good_or_Bad == "Good")
Race_U <- Race %>%
filter(Good_or_Bad == "Bad")
#########################
# Min-Max Normalization #
#########################
# Example datasets
cosine_similarities_1 <- Race_P$CosineSimilarity
cosine_similarities_2 <- Race_U$CosineSimilarity
cosine_similarities_3 <- Gender$CosineSimilarity
cosine_similarities_4 <- Career$CosineSimilarity
# Combine the datasets into a matrix
cosine_matrix <- cbind(cosine_similarities_1, cosine_similarities_2, cosine_similarities_3, cosine_similarities_4)
# Find the overall minimum and maximum values
min_value <- min(cosine_matrix)
max_value <- max(cosine_matrix)
# Apply min-max normalization
min_max_normalized <- (cosine_matrix - min_value) / (max_value - min_value)
# Replace the original datasets with normalized values
Race_P$CosineSimilarity <- min_max_normalized[, 1]
Race_U$CosineSimilarity <- min_max_normalized[, 2]
Gender$CosineSimilarity <- min_max_normalized[, 3]
Career$CosineSimilarity <- min_max_normalized[, 4]
#Sample for Presentation
write.csv(Gender, "Gender_Normalized.csv")
# Reference Factors and Splitting other data sets for analysis
refGender <- "M"
Gender$Gender <- relevel(factor(Gender$Gender), ref = refGender)
Career$Gender <- relevel(factor(Career$Gender), ref = refGender)
Gender_P <- Gender %>%
filter(Good_or_Bad == "Good")
Gender_U <- Gender %>%
filter(Good_or_Bad == "Bad")
Career_S <- Career %>%
filter(STEM == "Yes")
Career_N <- Career %>%
filter(STEM == "No")
########################
# Analysis of Variance #
########################
#Race
RacePANOVA <- aov(CosineSimilarity ~ Race, data = Race_P)
tukey_PR <- TukeyHSD(RacePANOVA)
RacePANOVA
tukey_PR
RaceUANOVA <- aov(CosineSimilarity ~ Race, data = Race_U)
tukey_UR <- TukeyHSD(RaceUANOVA)
RaceUANOVA
tukey_UR
#Gender
GenderPANOVA <- aov(CosineSimilarity ~ Gender, data = Gender_P)
tukey_PG <- TukeyHSD(GenderPANOVA)
GenderPANOVA
tukey_PG
GenderUANOVA <- aov(CosineSimilarity ~ Gender, data = Gender_U)
tukey_UG <- TukeyHSD(GenderUANOVA)
GenderUANOVA
tukey_UG
#Career
CareerSANOVA <- aov(CosineSimilarity ~ Gender, data = Career_S)
tukey_SC <- TukeyHSD(CareerSANOVA)
CareerSANOVA
tukey_SC
CareerNANOVA <- aov(CosineSimilarity ~ Gender, data = Career_N)
tukey_NC <- TukeyHSD(CareerNANOVA)
CareerNANOVA
tukey_NC
##########
# T-Test #
##########
#Race
#Pleasant Words
WhiteP <- Race_P %>%
filter(Race == "White")
OtherP <- Race_P %>%
filter(Race != "White")
t_raceP <- t.test(WhiteP$CosineSimilarity, OtherP$CosineSimilarity)
t_raceP
#Individual races compared to White with Pleasant Words
list = list('Black','Latinx','Chinese')
for (i in list){
t_test_P_result <- t.test(WhiteP$CosineSimilarity, subset(OtherP, Race == i)$CosineSimilarity)
print(t_test_P_result)
}
#Unpleasant Words
WhiteU <- Race_U %>%
filter(Race == "White")
OtherU <- Race_U %>%
filter(Race != "White")
t_raceU <- t.test(WhiteU$CosineSimilarity, OtherU$CosineSimilarity)
t_raceU
#Individual races compared to White with Pleasant Words
list = list('Black','Latinx','Chinese')
for (i in list){
t_test_U_result <- t.test(WhiteU$CosineSimilarity, subset(OtherU, Race == i)$CosineSimilarity)
print(t_test_U_result)
}
#Gender
MaleP <- Gender_P %>%
filter(Gender == "M")
FemaleP <- Gender_P %>%
filter(Gender == "F")
t_genderP <- t.test(MaleP$CosineSimilarity, FemaleP$CosineSimilarity)
t_genderP
MaleU <- Gender_U %>%
filter(Gender == "M")
FemaleU <- Gender_U %>%
filter(Gender == "F")
t_genderU <- t.test(MaleU$CosineSimilarity, FemaleU$CosineSimilarity)
t_genderU
#Career
MaleS <- Career_S %>%
filter(Gender == "M")
FemaleS <- Career_S %>%
filter(Gender == "F")
t_careerS <- t.test(MaleS$CosineSimilarity, FemaleS$CosineSimilarity)
t_careerS
MaleN <- Career_N %>%
filter(Gender == "M")
FemaleN <- Career_N %>%
filter(Gender == "F")
t_careerN <- t.test(MaleN$CosineSimilarity, FemaleN$CosineSimilarity)
t_careerN
##############
# Regression #
##############
#Race
RacePCoeff <- lm(CosineSimilarity ~ Race, data = Race_P)
summary(RacePCoeff)
tidy_output <- tidy(RacePCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_RaceP.csv", row.names = FALSE)
RaceUCoeff <- lm(CosineSimilarity ~ Race, data = Race_U)
summary(RaceUCoeff)
tidy_output <- tidy(RaceUCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_RaceU.csv", row.names = FALSE)
#Gender
GenderPCoeff <- lm(CosineSimilarity ~ Gender, data = Gender_P)
summary(GenderPCoeff)
tidy_output <- tidy(GenderPCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_GenderP.csv", row.names = FALSE)
GenderUCoeff <- lm(CosineSimilarity ~ Gender, data = Gender_U)
summary(GenderUCoeff)
tidy_output <- tidy(GenderUCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_GenderU.csv", row.names = FALSE)
#Career
CareerSCoeff <- lm(CosineSimilarity ~ Gender, data = Career_S)
summary(CareerSCoeff)
tidy_output <- tidy(CareerSCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_CareerS.csv", row.names = FALSE)
CareerNCoeff <- lm(CosineSimilarity ~ Gender, data = Career_N)
summary(CareerNCoeff)
tidy_output <- tidy(CareerNCoeff)
write.csv(tidy_output, "BERT_base_cased_lm_CareerN.csv", row.names = FALSE)
