knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(lubridate)
library(zoo)
library(forecast)
library(dynlm)
df <- read.csv('hw3_data.csv')
# Set the start date
start_date <- mdy("01/01/2023")
# Generate a sequence of dates
dates <- seq(start_date, by = "day", length.out = 200)
# Create a time series object
ts_data <- ts(data = df$y, start = start_date, frequency = 365)
# Create a data frame of the time series to use in line plot
ts_df <- data.frame(Date = dates, Value = df$y, x = df$x)
ggplot(data = ts_df, aes(x = Date, y = Value)) +
geom_line() +
labs(x = "Date", y = "Value", title = "Time Series Line Plot")
# Ljung-Box Test for white noise
ljung_box <- Box.test(ts_data, lag = 20, type = "Ljung-Box")
print(ljung_box)
values <- ts_data
# Create ACF plot
ggplot(data = data.frame(lag = 0:20, acf = acf(values, lag.max = 20, plot = FALSE)$acf), aes(x = lag, y = acf)) +
geom_bar(stat = "identity") +
labs(x = "Lag", y = "Autocorrelation", title = "Autocorrelation Function (ACF) Plot")
# Calculate PACF values
pacf_values <- pacf(values, lag.max = 20, plot = FALSE)$acf
# Create PACF plot
ggplot(data = data.frame(lag = 1:length(pacf_values), pacf = pacf_values), aes(x = lag, y = pacf)) +
geom_bar(stat = "identity") +
labs(x = "Lag", y = "Partial Autocorrelation", title = "Partial Autocorrelation Function (PACF) Plot")
arima_model <- auto.arima(ts_data)
print(arima_model)
plot(arima_model$residuals)
Box.test(arima_model$residuals, lag = 20, type = "Ljung-Box")
model <- dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + lag(Value, 7) + x, data = ts_df)
summary(model)$r.squared
summary(model)$adj.r.squared
plot(model$residuals)
View(ts_df)
View(ts_df)
dates <- as.Date(format(dates, 'mm/dd/yyyy'))
dates <- format(dates, 'mm/dd/yyyy')
dates <- format(dates, 'mm/dd/yyyy')
dates <- format(dates, '%m/%d/%Y')
model <- dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
summary(model)$r.squared
summary(model)$adj.r.squared
model <- dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
summary(model)$r.squared
summary(model)$adj.r.squared
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(lubridate)
library(zoo)
library(forecast)
library(dynlm)
df <- read.csv('hw3_data.csv')
# Set the start date
start_date <- mdy("01/01/2023")
# Generate a sequence of dates
dates <- seq(start_date, by = "day", length.out = 200)
# Create a time series object
ts_data <- ts(data = df$y, start = start_date, frequency = 365)
# Create a data frame of the time series to use in line plot
ts_df <- data.frame(Date = dates, Value = df$y, x = df$x)
ggplot(data = ts_df, aes(x = Date, y = Value)) +
geom_line() +
labs(x = "Date", y = "Value", title = "Time Series Line Plot")
# Ljung-Box Test for white noise
ljung_box <- Box.test(ts_data, lag = 20, type = "Ljung-Box")
print(ljung_box)
values <- ts_data
# Create ACF plot
ggplot(data = data.frame(lag = 0:20, acf = acf(values, lag.max = 20, plot = FALSE)$acf), aes(x = lag, y = acf)) +
geom_bar(stat = "identity") +
labs(x = "Lag", y = "Autocorrelation", title = "Autocorrelation Function (ACF) Plot")
# Calculate PACF values
pacf_values <- pacf(values, lag.max = 20, plot = FALSE)$acf
# Create PACF plot
ggplot(data = data.frame(lag = 1:length(pacf_values), pacf = pacf_values), aes(x = lag, y = pacf)) +
geom_bar(stat = "identity") +
labs(x = "Lag", y = "Partial Autocorrelation", title = "Partial Autocorrelation Function (PACF) Plot")
# DON'T USE auto.arima()!!!!
# Manually Select AIC and BIC
arima_model <- auto.arima(ts_data)
print(arima_model)
plot(arima_model$residuals)
Box.test(arima_model$residuals, lag = 20, type = "Ljung-Box")
model <- dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
summary(model)$r.squared
summary(model)$adj.r.squared
plot(model$residuals)
install.packages('astsa')
knitr::opts_chunk$set(echo = TRUE)
model1 <- dynlm::dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
rm(list = ls())
library(ggplot2)
library(lubridate)
library(zoo)
library(forecast)
df <- read.csv('hw3_data.csv')
# Set the start date
start_date <- mdy("01/01/2023")
# Generate a sequence of dates
dates <- seq(start_date, by = "day", length.out = 200)
# Create a time series object
ts_data <- ts(data = df$y, start = start_date, frequency = 365)
# Create a data frame of the time series to use in line plot
ts_df <- data.frame(Date = dates, Value = df$y, x = df$x)
model1 <- dynlm::dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
model2 <- dynlm(Value ~ L(Value, 1) + L(Value, 2) + x, data = ts_df)
acf(ts_data)
library(dynlm)
model1 <- dynlm::dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
model2 <- dynlm(Value ~ L(Value, 1) + L(Value, 2) + x, data = ts_df)
summary(model1)$r.squared
class(ts_df$Date)
summary(model2)$r.squared
pacf(ts_data)
plot.pacf(ts_data)
plot.pacf(pacf(ts_data))
library(stats)
plot.pacf(ts_data)
pacf_values <- pacf(ts_data)
plot.pacf(pacf_values)
library(GGally)
library(stats)
pacf(ts_data)
View(ts_df)
hist(ts_data$Value)
histogram <-
ggplot(ts_data, aes(x = Value)) + geom_histogram()
histogram
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(lubridate)
library(zoo)
library(forecast)
library(dynlm)
library(stats)
df <- read.csv('hw3_data.csv')
# Set the start date
start_date <- mdy("01/01/2023")
# Generate a sequence of dates
dates <- seq(start_date, by = "day", length.out = 200)
# Create a time series object
ts_data <- ts(data = df$y, start = start_date, frequency = 365)
# Create a data frame of the time series to use in line plot
ts_df <- data.frame(Date = dates, Value = df$y, x = df$x)
ggplot(data = ts_df, aes(x = Date, y = Value)) +
geom_line() +
labs(x = "Date", y = "Value", title = "Time Series Line Plot")
# Ljung-Box Test for white noise
ljung_box <- Box.test(ts_data, lag = 20, type = "Ljung-Box")
print(ljung_box)
acf(ts_data)
pacf(ts_data)
histogram <-
ggplot(ts_data, aes(x = Value)) + geom_histogram()
histogram
library(astsa)
arima_model <- sarima(ts_data$Value, p=1, d=0, q=2, details = TRUE)
arima_model <- sarima(ts_df$Value, p=1, d=0, q=2, details = TRUE)
plot(arima_model$residuals)
residuals <- residuals(arima_model)
plot(residuals, main = "Residuals of SARIMA Model")
arima_model <- sarima(ts_df$Value, p=1, d=0, q=2, details = TRUE)
model1 <- dynlm::dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
summary(model1)$r.squared
plot(model1$residuals)
arima_model$ttable
arima_model2 <- sarima(ts_df$Value, p=1, d=0, q=1, details = TRUE)
arima_model2$ttable
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(ggplot2)
library(lubridate)
library(zoo)
library(forecast)
library(dynlm)
library(stats)
library(astsa)
df <- read.csv('hw3_data.csv')
# Set the start date
start_date <- mdy("01/01/2023")
# Generate a sequence of dates
dates <- seq(start_date, by = "day", length.out = 200)
# Create a time series object
ts_data <- ts(data = df$y, start = start_date, frequency = 365)
# Create a data frame of the time series to use in line plot
ts_df <- data.frame(Date = dates, Value = df$y, x = df$x)
ggplot(data = ts_df, aes(x = Date, y = Value)) +
geom_line() +
labs(x = "Date", y = "Value", title = "Time Series Line Plot")
# Ljung-Box Test for white noise
ljung_box <- Box.test(ts_data, lag = 20, type = "Ljung-Box")
print(ljung_box)
acf(ts_data)
pacf(ts_data)
arima_model <- sarima(ts_df$Value, p=1, d=0, q=2, details = TRUE)
arima_model$ttable
arima_model2 <- sarima(ts_df$Value, p=1, d=0, q=1, details = TRUE)
arima_model2$ttable
model1 <- dynlm::dynlm(Value ~ lag(Value, 1) + lag(Value, 2) + x, data = ts_df)
summary(model1)$r.squared
plot(model1$residuals)
